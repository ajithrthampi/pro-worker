/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RoutesImport } from './routes/routes'
import { Route as AdminlayoutImport } from './routes/_adminlayout'
import { Route as BlogBlogpostImport } from './routes/blog.blogpost'
import { Route as AdminlayoutAdminRouteImport } from './routes/_adminlayout/admin/route'
import { Route as AdminlayoutAdminProfileImport } from './routes/_adminlayout/admin/profile'
import { Route as AdminlayoutAdminDashboardImport } from './routes/_adminlayout/admin/dashboard'

// Create Virtual Routes

const ServicesLazyImport = createFileRoute('/services')()
const PartnersLazyImport = createFileRoute('/partners')()
const ContactLazyImport = createFileRoute('/contact')()
const BlogLazyImport = createFileRoute('/blog')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const ServicesLazyRoute = ServicesLazyImport.update({
  path: '/services',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/services.lazy').then((d) => d.Route))

const PartnersLazyRoute = PartnersLazyImport.update({
  path: '/partners',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/partners.lazy').then((d) => d.Route))

const ContactLazyRoute = ContactLazyImport.update({
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/contact.lazy').then((d) => d.Route))

const BlogLazyRoute = BlogLazyImport.update({
  path: '/blog',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/blog.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const RoutesRoute = RoutesImport.update({
  path: '/routes',
  getParentRoute: () => rootRoute,
} as any)

const AdminlayoutRoute = AdminlayoutImport.update({
  id: '/_adminlayout',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const BlogBlogpostRoute = BlogBlogpostImport.update({
  path: '/blogpost',
  getParentRoute: () => BlogLazyRoute,
} as any)

const AdminlayoutAdminRouteRoute = AdminlayoutAdminRouteImport.update({
  path: '/admin',
  getParentRoute: () => AdminlayoutRoute,
} as any)

const AdminlayoutAdminProfileRoute = AdminlayoutAdminProfileImport.update({
  path: '/profile',
  getParentRoute: () => AdminlayoutAdminRouteRoute,
} as any)

const AdminlayoutAdminDashboardRoute = AdminlayoutAdminDashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => AdminlayoutAdminRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_adminlayout': {
      id: '/_adminlayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminlayoutImport
      parentRoute: typeof rootRoute
    }
    '/routes': {
      id: '/routes'
      path: '/routes'
      fullPath: '/routes'
      preLoaderRoute: typeof RoutesImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/blog': {
      id: '/blog'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogLazyImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactLazyImport
      parentRoute: typeof rootRoute
    }
    '/partners': {
      id: '/partners'
      path: '/partners'
      fullPath: '/partners'
      preLoaderRoute: typeof PartnersLazyImport
      parentRoute: typeof rootRoute
    }
    '/services': {
      id: '/services'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof ServicesLazyImport
      parentRoute: typeof rootRoute
    }
    '/_adminlayout/admin': {
      id: '/_adminlayout/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminlayoutAdminRouteImport
      parentRoute: typeof AdminlayoutImport
    }
    '/blog/blogpost': {
      id: '/blog/blogpost'
      path: '/blogpost'
      fullPath: '/blog/blogpost'
      preLoaderRoute: typeof BlogBlogpostImport
      parentRoute: typeof BlogLazyImport
    }
    '/_adminlayout/admin/dashboard': {
      id: '/_adminlayout/admin/dashboard'
      path: '/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminlayoutAdminDashboardImport
      parentRoute: typeof AdminlayoutAdminRouteImport
    }
    '/_adminlayout/admin/profile': {
      id: '/_adminlayout/admin/profile'
      path: '/profile'
      fullPath: '/admin/profile'
      preLoaderRoute: typeof AdminlayoutAdminProfileImport
      parentRoute: typeof AdminlayoutAdminRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AdminlayoutRoute: AdminlayoutRoute.addChildren({
    AdminlayoutAdminRouteRoute: AdminlayoutAdminRouteRoute.addChildren({
      AdminlayoutAdminDashboardRoute,
      AdminlayoutAdminProfileRoute,
    }),
  }),
  RoutesRoute,
  AboutLazyRoute,
  BlogLazyRoute: BlogLazyRoute.addChildren({ BlogBlogpostRoute }),
  ContactLazyRoute,
  PartnersLazyRoute,
  ServicesLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_adminlayout",
        "/routes",
        "/about",
        "/blog",
        "/contact",
        "/partners",
        "/services"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_adminlayout": {
      "filePath": "_adminlayout.tsx",
      "children": [
        "/_adminlayout/admin"
      ]
    },
    "/routes": {
      "filePath": "routes.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/blog": {
      "filePath": "blog.lazy.tsx",
      "children": [
        "/blog/blogpost"
      ]
    },
    "/contact": {
      "filePath": "contact.lazy.tsx"
    },
    "/partners": {
      "filePath": "partners.lazy.tsx"
    },
    "/services": {
      "filePath": "services.lazy.tsx"
    },
    "/_adminlayout/admin": {
      "filePath": "_adminlayout/admin/route.tsx",
      "parent": "/_adminlayout",
      "children": [
        "/_adminlayout/admin/dashboard",
        "/_adminlayout/admin/profile"
      ]
    },
    "/blog/blogpost": {
      "filePath": "blog.blogpost.tsx",
      "parent": "/blog"
    },
    "/_adminlayout/admin/dashboard": {
      "filePath": "_adminlayout/admin/dashboard.tsx",
      "parent": "/_adminlayout/admin"
    },
    "/_adminlayout/admin/profile": {
      "filePath": "_adminlayout/admin/profile.tsx",
      "parent": "/_adminlayout/admin"
    }
  }
}
ROUTE_MANIFEST_END */
